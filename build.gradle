plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.14'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.wanted'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'com.google.guava:guava:11.0.2'

	// Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-gson:0.11.5'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'

	compileOnly 'org.projectlombok:lombok'
	compileOnly('org.springframework.boot:spring-boot-starter-test')
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	// Mysql
	runtimeOnly 'com.mysql:mysql-connector-j'

	testCompileOnly 'org.projectlombok:lombok'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-test-autoconfigure'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	testAnnotationProcessor 'org.projectlombok:lombok'

}

// Compile Time VM Options (1)
compileJava {
	options.compilerArgs += ['--enable-preview', '-Amapstruct.defaultComponentModel=spring']
}

// Compile Time VM Options (2)
compileTestJava {
	options.compilerArgs += ['--enable-preview', '-Amapstruct.defaultComponentModel=spring']
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named("bootJar") {
	enabled = true
	archiveFileName.set("onboarding.jar")
}

tasks.register('zip', Zip.class) {
	dependsOn("bootJar")
	archiveFileName.set("onboarding.zip")

	from("build/libs/onboarding.jar") {into("")}
	from(".platform") {into(".platform")}
	from("procfiles/Procfile") {into("")}
}
